version: '3.8'

services:
  # Nginx service for reverse proxy
  nginx:
    image: nginx:latest
    container_name: connect-aid-nginx
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - connect-aid-network

  # Backend service
  backend:
    build:
      context: ./backEnd
      dockerfile: Dockerfile
    container_name: connect-aid-backend
    restart: unless-stopped
    # Only expose port internally
    expose:
      - "5000"
    env_file:
      - ./backEnd/.env
    environment:
      - CURRENT_HOST=${CURRENT_HOST:-backend}
      - FRONTEND_PORT=${FRONTEND_PORT:-5173}
      - ADDITIONAL_ORIGINS=${ADDITIONAL_ORIGINS:-}
    volumes:
      - ./backEnd:/app
      - /app/node_modules
      - ./backEnd/uploads:/app/uploads
    networks:
      - connect-aid-network
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://backend:5000/test"]
      interval: 30s
      timeout: 20s
      retries: 5
      start_period: 60s

  # Frontend service
  frontend:
    build:
      context: ./frontEnd
      dockerfile: Dockerfile
    container_name: connect-aid-frontend
    restart: unless-stopped
    # Only expose port internally
    expose:
      - "5173"
    environment:
      # Use relative URL since nginx will handle routing
      - VITE_API_URL=/api
      - VITE_CURRENT_HOST=${CURRENT_HOST:-frontend}
    volumes:
      - ./frontEnd:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - connect-aid-network

networks:
  connect-aid-network:
    driver: bridge
